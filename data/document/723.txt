SecureAir - Security as a Service
Building security by design is an after thought for many products, with IoT almost all appliances have intelligence via SOC, be it Television, Microwave, Refridgerator or any home appliance or commercial appliances. All these devices need to communicate for various reasons, but secure and trusted connection is always a challenge, providing this service to devices that communicate via Air as medium is "SecureAir"
Trusted authentication has always been an interest. How can a human trust another human being with very minimal knowledge and intuition, if we can build this intuition to the devices and generate trust via certain means (dialogs, handshakes, pattern responses) then the communication becomes easier, there need not be a 3rd party to say that some device is good or bad, the communicator itself knows or gets to know about it. Like humans, the devices start making decisions and continue the communication or start avoiding the communication based on various patterns (hacks, in appropriate communication, excessive usage of resource etc).
Internet enabled devices can run any kind of operating system. For example Google runs Android on wearable devices, so does Samsung, Apple runs iOS and Microsoft devices run Windows, all of these devices have their own authentication system using gmail/outlook/AppleID. Google, Yahoo, Microsoft outlook (previously Hotmail) support OAUTH protocol for trusted authentication and access of resources. But Apple being very restrictive currently does not allow 3rd party OAUTH authentication outside the Apple ecosystem (an Apple device using gmail authentication).
In RSA, if we come up with an authentication system trusted by the device providers (Apple, Google, Microsoft and others) then internally RSA can talk to the respective authentication servers(oauth enabled) and get the access token and securely transfer the access token to the device that then communicates with the required resource with the access token. The entire channel has to be SSL secured.
How does RSA trust the device, the devices have to register with RSA either via an inbuilt RSA certificate that came with the device or the device user has to use the RSA certificate to gain access to the RSA authentication system. This needs collaboration with the device vendors to have RSA certificate installed for a trusted communication with the RSA auth servers. With IoT all of these devices will be able to communicate using a Network Mac address as identity and that can be used along with the certificate, or the certificate generation for the device can be based on the MAC address, which is a static identity of the device. It can also be a Bluetooth firmware ID, if the device does not have a MAC address and the communication is proxied via another device that has MAC address.
Here the expectation is that the devices have to be built with RSA certificate to communicate to a trusted source which can provide various services like authentication, monitoring, health check, reporting, 3rd party resource access(in the form of expirable access token), updating the device firmware etc. With this facility, RSA servers inturn can manage the device such a way that the external communication is encrypted or not allow communication if the channel is clear. Also provide the keys to encrypt the data stored in the device and in transit.

This idea can start simple with the mutual trust via certificates based on the CA, so this limits to only RSA enabled devices, but can extend further if certain artificial intelligence is introduced in the future, making the IoT communication like human communication.
