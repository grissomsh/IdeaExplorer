Smart Datacenter
In this idea we discussed ways to manage the labs using smart App which will:
	1) Reduce the manual effort
	2) Reduce the physical footprint wherever possible
	3) Optimize the resource utilization
        4) With App we can remotely manage the hardware components
Many times for smaller issues we need to wait for lab team to come in and we thought a self-service App will save our time and also reduce the dependencies with the lab team.
Our solution is to use self-service model, based on hashtag based smart App lab client.
• All the lab hardware and services will have their unique hashtag (#) and mentions (@), with which it is easy user to raise request,
  -- for example, 
 A) User: #provisionlun 2x10GB @myhost.lss.emc.com
    Lab: #provisioned @6000144000000010303F5E3700F9E473 @6000144000000010303F5E3700F9E474 to @myhost.lss.emc.com

 B) User : #reboot @myhost.lss.emc.com

• The smart App is made cross-platform - iOS, Android & PC, so that user could raise/track/update request/ticket anytime anywhere. It also, benefits lab personnel, to get notification on their preferred mode of communication.
• The smart App could be an independent App or it's service could integrated with official communicator, like Lync.
• Classify the service requests to following profiles
  -- Immediate, no lab admin intervention required. 
  -- Immediate, lab admin intervention required.
  -- Not immediate, Require planning.

• Immediate, no admin intervention required.
  -- These are category of service requests can be automated, without lab admin intervention.
  -- Use of ViPR could help automate and orchestrate most of the service request under this category.
  -- Use of virtual editions wherever required for test and development projects will help automate most use cases as well as minimizes the usage of CAPEX like VPLEX/VE, vVNX, etc.
  -- Use of automation utilities like puppet which can help in automate the host configuration from bare metal.

• Immediate, lab admin intervention required
  -- These are category of service request semi-automated with minimal supervision from lab personal. 
  -- User can interact with lab personal and complete the service request immediately, again through hashtag based request, in the form of instant messages/chat messages.
  -- Open data center could bring both user and lab admin under common platform of understanding.
  -- Open data center could play an effective role between user and lab admin in this case, so that it enables user to make precise requests during conversation with lab admin.

• Not immediate, Require planning
  -- These are category of service request that may take some time to resolve, like test bed configuration.
  -- For these category, automatic ticket assignment is made and user is notified.
  -- User can follow-up and track the service request using the smart App.

• Further the data generated by smart App when fed to analytic services could best used for optimal resource utilization and strategic road-map planning for lab.

• Smart App acts like Personal Lab Adviser for each user and thus eliminates the work-group based silos.
• Hashtag/Mentions based hardware tagging makes heterogeneous hardware management simpler in an elastic data center environment and plays crucial role in facilitating fluidity in hardware mapping
• This will also reduce the dependencies of lab support even in different time zones.
• Data generated from Smart App could help enable optimal resource partitioning, based on resource utilization pattern.
• Use of open data center along with Hashtag based Smart App, helps in effective incident management, quick resolution of service requests.
• In a dynamic data center environment, along with Hashtag based Smart App, use of ViPR for orchestration and virtual editions of storage, provides the much needed scalability without comprising on the SLAs
• Further Smart App data could shed lights on bringing value through cost effective failure management and reducing cost variability.
