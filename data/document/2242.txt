ViPR Add-on -- Issues Predictor
Through this idea, we can predict issues on arrays and hosts that managed by ViPR-C which will make the SDS maintenance more easier.
During testing on ViPR-C, we found there are many kinds of data of ViPR that haven't been used effectively. But these data are valuable. We can use the data to help the admin to manage the resources more easily. Then, this idea came out.
Two goals this tool can achieve:
Goal 1. With consumption status from storage system/pool in ViPR DB and metering data for storage system/pool and volume, we can calculate the consumption speed and acceleration for them. After the analysis by our prediction model, we can predict the usage trend for array and volume. Then we can notify the admin for these predictive issues. The same logic will be used for storage port prediction.
	Detailed relationship between array's status and data of ViPR:
	Metering data can be used for predict Volume consumption status:
	    . provisioned_capacity: Volume assigned size.
	    . allocated_capacity: Array side occupied size
	    We can use these 2 values above to estimate the time when volume will out of space.
	    
	    . bandwidth_in: Write IO of this volume
	    . bandwidth_out: Read IO of this volume
	    . kbytes_transferred: 
	    We can use these 3 values for array RAID/media (For example, from FC to SSD) tuning.
	
	Data can be used for predict Storage pool consumption status:
	    . Storage pool subscribed capacity and used capacity: 
	    We can use them to estimate the time when storage pool will out of space
	
	Storage Port:
	    . total_ios: Total ios in previous one hour
	    . kbytest_transferred: 
	    We can use these two values to select storage ports with lower usage for new masking.
	                                
	Storage System:
	    . read_hit_ios:
	    . write_hit_ios: Read/write cache hit 
	    We can use them for cache tuning.
    
Goal 2. With host information from ViPR DB, we can connect to the host and collect the information from host by plugin software (installed by our tool) on the host, such as CPU/Mem usage status, I/O rate and throughout, status of the host's HBA card, over a given time span for analysis with prediction model, we can predict the issues of the host. Such as, the HBA card will fail, memory and CPU should be expanded and so on.


High Scalability and High Availability this tool can provide:
This tool will be setup on CloudFoundry PaaS, which will bring High Scalability and High Availability to this tool. Whatever it's a small data center with several arrays and hundreds of hosts and thousands of volumes, or a big one with hundred times of the resources that in a small one, this tool will handle it.

Data flow in this tool:
Collected data from ViPR and host will be processed and stored into DB. Machine learning algorithms are used to build the prediction model which will be used to analysis the data by time sequence and find the predictive issues. Then warnings/emails/SMS will be triggered to notify the admin about the predictive issues.

Rest API for integrating with other software:
This tool will provider RestAPIs for several modules, then it can be integrated with other software easily. For example, "Analysis rule defination module" and "Issue shown module" can be integrated with ViPR, SRM or other software with RestAPIs. With integration, this tool can be managed by these softwares.


The six modules of this tool:
Data collector and pretreatment module -- (multi-thread type)
It fetches data from ViPR and host every hour by each array and host, and makes pretreatment for the data. Call module "Data storage module" to insert the data into DB.

Data storage module --
This module will be used to store the pretreatment data into HBase. And query data from DB with pig for other modules.

Analysis rule defination module -- (on demand from UI input, provide RestAPIs)
This module will define all the rules for prediction model. We have a set of rules as default, but the admin can change them from UI as needed.

Data analysis module -- (executed per hour, multi-thread type, base on pig+HBase+Spark framework)
With machine learning algorithms (such as Ensemble learning and regression algorithms), the prediction model will use the analysis rules and pretreatment data in DB to find the predictive issues by each array and host, and store the results back to DB with calling "Data storage module". Then trigger "Issue notify module" to notify the admin. Furthermore, we can use big data analysis technology to do more analysis here.

Issue notify module --
Triggered by "Data analysis module", use warning on UI, email or SMS to notify admin about the issue.

Issue shown module -- (provide RestAPIs)
UI used to show all or customized issues. The data come from DB that generated by "Data analysis module".

Please refer to https://inside.emc.com/docs/DOC-155200 for architectre diagram
With this tool, the admin will be notified with predictive issues from array and host. They can make decision based on the predictive notifies. Such as expanding the storage pool, expanding the volume, adjusting the port selection policy, exchanging the HBA card, adjusting the amount of CPU and memory, and so on. This will make the data center more reliable.

