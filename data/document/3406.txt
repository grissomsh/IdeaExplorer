Productize the Global Information Network Architecture

This is a patented Department of Defense MAC1 and DIACAP certified technology developed by a small team of developers in Santa Cruz CA.  The technology is employed in DoD and other non-defense related applications.   The small team of developers has been looking for a way to partner with EMC in developing this technology commercially.  I have been engaged with this team for several years and have explored joint opportunities with them.  
Although OO languages have been around since the 1960s, they really started to dominate in the 1990s.  At that same time a new approach to designing systems, Object-Oriented Analysis and Design (OOAD), also become the standard.  OOAD focused attention on objects and their relationships for the first time.  Unfortunately, OO languages have no model for relationships – not surprising given the historic focus on “doing” and the early genesis of OO languages.  As a result, systems built with OO languages implicitly define relationships in code, making relationships hard to understand, change or extend.  The Global Information Network Architecture (“GINA”) Project set out to create an environment for managing information presentation and interoperation using best practices such as model-based software design, component-based development, and descriptive programming. In addition, an early goal for GINA was that it to be “reflexive”, i.e., GINA would be described and implemented as a GINA model.  That goal meant the team quickly found out that reflexivity required GINA to have a deep understanding and model for managing relationships, now called “Vector-Relational Data Modeling” (VRDM).  As a result, unlike in traditional OO, relationships in GINA are not buried in code, but instead are assembled from component objects.  Given that thinking is all about relationships, VRDM represents a key conceptualization for modeling thinking: finally there is a straightforward approach to modeling relationships. Moreover, GINA models relationships as data.  Hence, for the first time data coming into a computer system can directly alter the relationships in an application by simply being captured in the appropriate format to represent a relationship, i.e., it is now possible for an application to think in the very same way humans do.  Hence, VRDM makes GINA a more appropriate platform for building cognitive enhancement models, and ultimately for implementing thinking, than any existing OO environment.
Interestingly, because our approach to relationships has been done within the traditional framework of computing, we tend to have a limited view of relationships.  However, once one is freed from thinking of relationships in terms of their direct implementation in code as in OO languages, one quickly recognizes that relationships can be variously probabilistic, proximate, implied, declared, etc., i.e., an entirely new world of relationship possibilities begins to emerge, as does a more robust approach to implementing thinking. Given the progress we have made in automating “doing”, the big challenge today is less about automating specific tasks or groups of tasks, and more about orchestrating their working together effectively, and ultimately, intelligently, whether automatically or with human intervention.  Moreover, given that we want to eliminate any loss of data as our processes move across organizations, we intrinsically feel the need for an interoperable “Information Universe” where every action or atom of information can be understood in context as it transits through the systems and repositories of every organization participating in its lifecycle.  The United States Department of Defense calls that a System-of-Systems (SoS).  The GINA team addressed precisely this need as a key goal for GINA within a framework of development best practices.  Moreover, because of VRDM, GINA can implement a SoS in a more flexible, natural way: design and describe the SoS as an “Information Model” that represents the application using user-understandable, domain-appropriate semantics, within an environment that enables all of the relationship and context management that is required to create a true Information Universe. GINA has an GINA-based Interactive Development Environment (“IDE”) that allows designers to create SoS definitions and store them, to later be used to assemble the SoS from components. GINA also has a model for describing the relationship between the user and the model so that the user can get access to the information and or capabilities they need – and nothing else. This approach provides information access control that is well beyond the current state-of-the-art.  GINA is the robust, extensible, cost-effective way to address the primary technical challenge facing today’s organizations: interoperability and interoperable applications.  GINA provides a single, comprehensive model-based environment for information interoperation, aggregation, interoperation, and visualization. GINA’s description-based implementation through component assembly significantly enhances speed of development, fidelity to intent, and accuracy under change.  Its information access model provides an unprecedented degree of control over access to the information GINA aggregates and models.  To top it off, GINA ends up being the right platform to explore computational Thinking!

