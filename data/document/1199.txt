Enhance issue reporting for graphical applications
This idea is to integrate common behavior to investigate customers' issues in ECD products
The idea came up during a brainstorming session and was inspired by similar solutions in recent Microsoft products, like Visual Studio 2013/2015 or Windows Feedback app in Windows 10 Technical Preview.
The solution is to have a button in an application, which starts recording all user actions to reproduce an issue and maybe enables some extended logging. After that, all requred logs are collected and a form to submit a bug appears. This solution is intended for Captiva operator modules, but can be applied to any Windows GUI.
From technical POV, there should be a library, which requires as few actions as possible to be added to existing project and enables collecting as much data as possible: mouse and keyboard events, memory and CPU usage, crashes and exceptions inside the application, states of graphic elements, environment variables, language etc. VNX already has similar technology and it can be partially re-used in this solution.
There is a challenge on how to present collected data in a handy way for developer to know exactly what happened at any point in time. I'd say it should look like timeline tool in some profilers, where one can select a time frame and filter events to view.
The successful implementation of proposed idea would reduce amount of time and actions to submit an issue with all required data to investigate it. Therefore, average time to resolve an issue is likely to decrease, which will improve customer satisfaction.
