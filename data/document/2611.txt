Highly Agile solution supportability
This proposal allows existing solutions to be extended and/or remediated without always requiring the traditional engineering cycle (code/build/release) and customer deployment cycle (get updated bits + app shutdown/update/restart). 

This idea was conceived during the development of Storage Array discovery for Polaris in October 2014.  While analyzing the requirements to perform discovery it was realized that a hierarchal dependence of API calls existed that could be easily modeled in a directed graph.
The idea has been implemented and currently exists as a working subsystem that can perform discovery on RecoverPoint and DataDomain systems.  
Support for XtremeIO was added in May 2015 and required approximately 2 man hours with zero code changes.  Traditional coding methods would have taken well over 10x (perhaps 20x or more) the amount of time to accomplish the same goal.
In addition to the innovators, others supporting this effort included Scott Auchmoody, Adam Brenner, Jeff Norton and Chris Hackett.
Themis is an API workflow engine that significantly reduces the development effort and ongoing support costs associated with developing applications that communicate with remote APIs. 
Interfacing with remote APIs is typically a highly repetitive task that consists of custom code to query, retrieve, transform, act and iterate on data that is obtained from a remote API (e.g. â€“ DDMC ReST API).  By incorporating Themis, application developers no longer need to write or maintain code for interacting with an API.
By specifying the needs of an application in a configuration file (the Themis DCF) and supplying information about the remote API's programmatic interface (function calls and data structures), application developers are freed from nearly all coding to access a remote system through its API.  This eliminates a significant amount of redundant application code which reduces application development time and defect rates.

References:
https://inside.emc.com/docs/DOC-150790
https://inside.emc.com/docs/DOC-145371
Themis can be considered a success anytime is it added to a solution of sufficient complexity - where multiple calls to a remote API are required.  As stated previously, it will save costs in engineering and customer support time. 
