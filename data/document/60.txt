Foresight - Log driven error management
3rd platform SDS Predictive Maintenance
CTD Supportability in 12 Months or Less
Global Platform Engineering (GPE) Challenge(A bit loosely)

We came up with the idea for this while working for ECI and realizing the massive number of insights that are there in logs but are so hard to uncover because of the sheer volume of logs generated by 15 different modules talking to each other.
Also, involved in the brainstorming session and help to the implementation of the idea would be the existing log and esrs team under Mr. Afzal Jan.
These logs can help pinpoint the cause of the error and the specific module instantly if we had a pattern matching algorithm running on logs. We get this by modifying existing databases of errors and adding the log snapshot of the system to every documented issue. Next time an issue is coming, the pattern matching algorithm can tell you that there is an 80% chance that this is the error and it can be solved using this fix documented here directly. This would save a lot of valuable time of the support team. There can also be  a scenario where if the system becomes good enough and logs are standardized across products, an error fix of one product can be suggested for a yet undocumented similar bug in a new product.
Another tweak of the idea, it is monitoring logs and system resources. So, it can identify system problems that accumulate over time and cause catastrophic failure of the system by predicting them by bench marking time and memory footprint of logical operations by monitoring log generation. By having this backed by a database of all attempts to fix that issue, it can tell you the most optimal solution to that problem: ----Increase CPU now to avoid thrashing in 6 hours with a probability of 90%. --Possible switch problem for this module as we can see increasing amounts of time between start and end log line generation for a logical operation.

This system integrates with a system like the kibana module in the ECI project for log aggregation and exists as a separate service interacting with the other modules through REST. It can also push new insights into kibana. It can integrate alerts to the customer through the Monitoring & Reporting module.  

We can call ourselves successful if the system can predict how to handle issues that cannot be strictly speaking programmed for but do occur in a runtime environment and the customer and look at the notification and do it himself without contacting EMC support later when the system goes down.
The system will also help support save time by having a probability sorted list of possible causes and suggested fixes. 

In an ideal world, foresight databases of existing products help suggest a fix for a yet undocumented bug for a new product.
