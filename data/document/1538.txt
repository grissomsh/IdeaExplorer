Proactive Bugs & Issues Prediction Platform 
Inherent complexity associated with EMC products can lead to new issues/bugs in the field which were otherwise undetected in regular QA cycles. As we integrate the various products under CTD portfolio, the chances of such issues erupting at customer's site is quite possible. A pro-active detection such issues & bugs can go a long way in increasing the TCE and customer's trusts.
This idea inception happened while working across DPC & Mozy product portfolio. 
PowerPoint Presentation: https://inside.emc.com/docs/DOC-155458

The internal bug database (bugzilla, redmine, Jira), the customer support/escalation database etc. are great corpus of information about the various issues and problems detected in our products. While the internal bug database can give us insights about potential hot areas within the product where most bugs are reported, the customer support database gives us important information about the type of environment where our products are actually deployed in the field with many different configurations and the various issues faced and the . We aim to develop an analytical platform using modern data analytic techniques and applying machine learning algorithms and NLP patterns on these various sources to pro-actively detect potential buggy areas in out code-base and also decipher the various deployment configurations where our product suffers the maximum issues. This way of analytically discovering issues and bugs can help us to resolve those before our customer encounters in production. The approch is unique and innovative because it gets built on top of the usual QA/Support matrix and uses the power of data to predict problems and so that we can act on them quickly.

The idea when implemented will mostly be a data analytic platform based on Hadoop or similar platform. If Hadoop is used, we can make it an application to be run on top of Yarn. The product will be called a "success" if it can predict bugs and issues of EMC products based on historic data and give engineering an opportunity to pro-actively fix those. It will help save a lot of money which are otherwise iteratively spent of testing & bug-fixing cycles and also help  improve customer satisfaction, optimize release cycles and thereby improving EMC's product portfolio

