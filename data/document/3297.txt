Recovering Lost Credentials (or Authentication State) With the Help of Your Friends

The idea is submitted for the 2014 RSA Mobility & Security Challenge. 

The idea was initially conceived by the members of RSA Labs in Q3 2013 and subsequently was further developed until Q1 2014 (where a related patent application EMC-13-0635 was filed). The idea is particularly relevant to Archie/NGX. We currently consider further extensions of the idea to continuous user authentication based on social means. Innovators Ari Juels and Ting-Fang Yen are former EMC employees.
Our approach employs fourth-factor authentication (4FA), i.e., “somebody you know,” for recovery or renewal of credentials needed to access an online service in an enterprise or cloud computing system, where 4FA is appropriately enhanced with capabilities offered by modern mobile devices. By design, our proposed credential-update mechanism offers: (1) usability, as the system handles legitimate recovery requests in a lightweight and useable fashion; and (2) resilience, as the system tolerates attacks aiming at getting access to a user’s credentials by abusing the credential-update mechanism. The main idea is to use a number of social contacts (e.g., friends, family members, coworkers) to aid with credential recovery/renewal. The social contacts are registered by the user at enrollment time or enrolled automatically by the system using some existing organization chart or social network structure. Then, during a credential-recovery phase, a user obtains refreshed credentials by the system, after she has been authenticated by an appropriate subset of her social contacts (called helpers) via an out-of-band channel that is equipped with biometric capabilities (e.g., face-to-face contact, video conference, etc.), where essentially the helpers vouch for the user. Our proposed solution improves over existing 4FA approaches on the usability of the used protocol: in our preferred embodiment, each helper only presses a button to vouch for the identity of the user and no explicit helper-to-user or user-to-system vouching-code transmissions are necessary.

