Automation of Open Source Compliance plan within EMC
Innovative ideas that improve developer and IT experience and productivity within EMC products is one of the mottos of Russia COE Open Source Challenge. By automating the Compliance plan documentation, we are improving developer productivity by significantly reducing the work load in coming up with an Open Source compliance within EMC for teams that work to integrate open source components within their products.
Before every release an Open Source Compliance plan is to be submitted. It takes a lot of effort and time to update and is a lot complex to work on. For the last iteration we had to update 500+ component information and that involved a lot of manual work and writing scripts for info update. To automate the update to the compliance, the current idea was proposed. 
Main focus of this idea is to automate compliance plan documentation and reduce time, effort & nullify any human errors. 
As per the idea, we are proposing an OSS compliance check tool which will initially be targeted for major platforms. It will basically have a CLI with a limited set of commands to run the query. A library for initial diagnostics and a centralized database will be available which would be regularly updated and to which the CLI will query for information.
The tool will run queries (ex: rpm) on the system where product is installed and retrieve component information (version, license info, copyright, etc.). If certain info is missing; it would run few additional scripts to retrieve them from the system and for the one’s which it still couldn’t find the values, database will be queried and will update the database (this can be controlled) based on your entries if info is not available.
Once this info is available it would generate the license level for the components by running internal scripts. For level 3 components the source code has to be submitted, which will be intimated to the user (or it can check if it’s already checked in by some other team). And for level 4 components it would suggest other equivalent level 3 or lesser components. The developer needs to work only when the source code or level 4 alternate suggestions are not available. This will be then updated to the database.
If the idea is successfully implemented, it would not only increase the developer productivity by decrease the work load on him.  Optimize the time taken and also make the process less complex and troublesome with no room for human errors.
