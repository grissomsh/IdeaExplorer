Implementing file compression mechanism on file system level during data flush for shadow data compressing
For real big data problem store all data can rise. Specifically for cases when data formats are clearly defined and storage appliances used to store reduce set of data format. Such as bioinformatics data, medical images etc. On-the-fly shadow compressing mechanism can be appropriate solution to reduce size of data stored.
Just working on current projects I thought that such idea can be reasonable. After brief search I did not find realization so I decided to suggest it for you.
Imagine we have a genome file in FASTA format and user who want to save such file into storage. My idea is providing file system mechanism to detect file format during flush and perform appropriate compression for the format in shadow for user mode to reduce size of saved data. E.g. for FASTA MFCompress realization on file system level can be invoked during file saving. 

Same approach can be used for other interested formats. E.g. if some appliance is used primarily to store some kind of data there are be enabled some different compression mechanism.
This can be done via adding compress microservices for some file systems as OS modules. Admin will register some compressors during initial storage setup. Customer will get ability to save more actual data on the same storage without additional compression/deduplication software. Also, usage appropriate for each format compression mechanism can be better than usage general one.  Because working on the fly there is no needs to spend additional time to compress huge part of disks only file per it flush process.
