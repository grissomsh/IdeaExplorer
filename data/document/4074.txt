Leverage ViPR's data service to store the files(such as archived log) generated by ViPR itself

During a brain storm session, I notice that the log files on the ViPR controller nodes will be rotated and the older archives will be deleted, which made me think: why we cannot save that valuable logging data while we are creating a new generation storage? We already have it in ViPR its own, which is the ViPR data service! 
In a typical ViPR's user scenario, the ViPR controller nodes work with several ViPR data service nodes. In this case, we can make the ViPR controller nodes act as the clients of the ViPR data service nodes, store the ViPR controller log files on the data service nodes. By doing so, we get the following benefits:

  1. The data generated by the ViPR controller will not consume its own storage, so we can keep all the log files and do not need rotation anymore, which will make debugging easier, and make it's possible to analysis ViPR's running status based on the log files. Data is never useless;

  2. This implementation can reduce ViPR's own data backing up mechanism if it's needed. Since the data service is designed to store object data, we don't have to do any extra work;

  3. Leverage ViPR data service's feature to improve the ViPR's own generated data's reliability. For an example, if one of the ViPR controller node crashes and the data on it is corrupted, we can still have the log files on the data service nodes. And ViPR's object data service provides multiple copies of the objects stored in it, the reliability is ensured without any extra effort.

I believe not only the log files, but also some other data generated by ViPR itself can leverage ViPR's own data service. By doing so, it can reduce ViPR's complexity while increasing the data reliability and performance.

