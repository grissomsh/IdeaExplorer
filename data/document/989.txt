Method for snap based replication on arrays that don’t support snapshots 
Our idea is relevant to challenge "leveraging ScaleIO/RP or other technologies for creating better offering in converged and hyper converged infrastructure" because one of the biggest problem in converged infrastructures is backup. Our idea will help to develop backup solutions for virtual environment.
We came to idea in internal RecoverPoint discussion. It was presented in ngin course hackaton. 
This method provides a way to perform snap based replication with minimal impact on production performance. It can be used on any production array that doesn’t support snapshots or when native snapshots degrades production performance. For example, it can be used to perform snap based replication of VMs in a VMWare environment in order to backup them to a DataDomain. The basic idea is to perform the replication in two stages. At the first stage changes are written by the RPA to a diff thin device and dirty regions are tracked by the RPA. At the second stage the diff device is used as a snapshot to be replicated to the remote copy. The remote copy can be a backup server like DataDomain. Whenever a snap replication is done a new thin device to hold the diff data will be created and the old diff device will be deleted. This method is efficient in capacity only if the diff devices are thin. If they are the required extra capacity for the diff devices will depend only on the change rate and not on the production devices capacity. Just like in regular snapshots. These devices can be provisioned on production array or on a different array that is available for the RPAs on the production site. If the diff devices are not thin, this method is still usable, but with the cost that each of the diff devices will require a capacity that equals the sum of all the production volumes. The effect on production performance should be similar to regular continuous replication. 
Our method provides a way to do snap based replication and backup even if the production array doesn’t have snapshots, and the performance impact of production is minimal. 
