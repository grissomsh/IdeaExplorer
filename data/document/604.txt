Open Sourcing of EOL/EOSL Software Products
Our End to End Business Process does not fit customer needs when it comes to our software product lifecycle. My idea is targeted at protecting our install base by ensuring ongoing high levels of TCE and supportability, thus firewalling our revenue streams, whilst requiring us to make only minimal investments.
The idea is mine alone, and is the result of 3+ years of dealing with the impacts of our EOL/EOSL decisions within our APJ customer base, and most importantly our Japan customers, where customers expect product lifecycles of 7+ years....  I have been regularly raising the need for us to change the way we manage product lifecycles with Symmetrix Engineering Exec and Product Management for some time now. I have recently discussed this particular idea with my manager Todd Foley, and with some selected peers in APJ. All have considered it worthy of further investigation.
My solution is fairly simple. Instead of declaring an EOL and EOSL for a software product, and then dropping support for the product at the EOSL date, we simply transition the product from being EMC developed and supported to being Open Sourced with Community based support. In this way products such as Replication Manager, which has been deployed by many customers but which does not really have a fully functioning follow-on product (viz Appsync does not support all of the environments that RM does, and ViPR Controller is still in the development phase...), will still be able to be used with confidence by the customers that have acquired them. From an EMC perspective, our role with these products would transition from being the developer and sole support provider of the product prior to its EOL to being the distribution owner and community leader post the EOL/EOSL. At EOL or EOPS date for the product we would transition the product's program code into the public domain under an appropriate open source software license that specifies EMC as the licensor. It is expected that the work required on EMC's part to support post-EOL distribution management would be limited to consolidation and testing of community developed enhancements and fixes along with some management tasks, which I believe would require a low level of investment necessary to resource an open source software testing environment and a small QA team. 
Success would come in several forms. It is envisaged that:
  - customer TCE would improve, 
  - the numbers of RPQs requiring extended support on soon to be EOL'd/EOSL'd 
    software products would diminish substantially, and 
  - reduced customer reticence towards acquiring our solutions in markets such
    as Japan, China and India, where customers often run 7+ year environment
    lifecycles, caused by a perceived lack of commitment on our part to
    supporting product for the lifecycle expected by the customer, 
would in combination result in lower support costs for "mature" software products and in better overall revenue dues to greater customer confidence. 
